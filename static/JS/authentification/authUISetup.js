// =============================================================
// üìÅ authUISetup.js (authentification)
// -------------------------------------------------------------
// Ce fichier initialise tous les comportements li√©s √†
// l‚Äôinterface d‚Äôauthentification utilisateur d√®s que le DOM est charg√©.
//
// üéØ Objectif :
// Orchestrer la logique front-end des formulaires de connexion,
// d‚Äôinscription, de validation en temps r√©el et de mot de passe oubli√©.
//
// üîß Fonctionnalit√©s :
// - `checkLoginOnLoad()` : v√©rifie si l‚Äôutilisateur est d√©j√† connect√©
// - G√®re la soumission du formulaire de connexion (`submitLogin`)
// - G√®re la soumission du formulaire d‚Äôinscription (`submitRegister`)
// - Active la validation en temps r√©el des champs email et t√©l√©phone
// - Active la r√©initialisation de mot de passe (`resetPassword`)
// - Rend accessibles globalement certaines fonctions pour l‚ÄôUI (modales)
//
// üì¶ D√©pendances :
// - `formValidation.js` : validation live du t√©l√©phone et de l‚Äôemail
// - `authHandlers.js` : logique de connexion et inscription
// - `resetPassword.js` : d√©clenche le flux de mot de passe oubli√©
// - `sessionManager.js` : v√©rifie et affiche l‚Äô√©tat de session
// - `uiManager.js` : g√®re les actions de l‚Äôinterface utilisateur (changement de formulaire, visibilit√© du mot de passe, etc.)
//
// ‚úÖ Avantages :
// - Centralise toute l‚Äôinitialisation du syst√®me d‚Äôauthentification
// - Code propre, modulaire et r√©utilisable
// - Exp√©rience utilisateur fluide (pas de rechargement de page)
//
// üß© √Ä utiliser dans :
// - `index.html`, `login.html`, ou n‚Äôimporte quelle page avec modale ou section de connexion
//
// ‚ö†Ô∏è Les IDs suivants doivent exister dans le HTML :
// - `#loginForm`, `#registerForm`, `#register-phone`, `#register-email`, `#forgot-password-button`
// =============================================================



// ============================
// üì¶ Importation des modules
// ============================
import { validatePhoneInput, validateEmailInput } from './formValidation.js';
import { submitRegister, submitLogin } from './authHandlers.js';
import { resetPassword } from './resetPassword.js';
import { checkLoginOnLoad } from './sessionManager.js';
import {
    switchToCreateAccount,
    toggleLoginForm,
    togglePasswordVisibility,
    switchToLogin
} from './uiManager.js';


// ============================
// üöÄ Initialisation globale apr√®s chargement du DOM
// ============================
document.addEventListener("DOMContentLoaded", () => {
    console.log("‚úÖ DOM pr√™t, initialisation de l'interface utilisateur...");

    // ‚ôªÔ∏è Connexion persistante (si utilisateur d√©j√† connect√©)
    checkLoginOnLoad();

    // üì§ √âcouteurs pour les soumissions des formulaires login/register
    const loginForm = document.querySelector('#loginForm');
    const registerForm = document.querySelector('#registerForm');

    if (loginForm) {
        loginForm.addEventListener('submit', submitLogin);
    }

    if (registerForm) {
        registerForm.addEventListener('submit', submitRegister);

        // üìû Validation en temps r√©el (uniquement pour inscription)
        const phoneInput = document.getElementById('register-phone');
        const emailInput = document.getElementById('register-email');

        if (phoneInput) phoneInput.addEventListener('input', validatePhoneInput);
        if (emailInput) emailInput.addEventListener('input', validateEmailInput);
    }

    // üîê R√©initialisation mot de passe
    const forgotPasswordBtn = document.getElementById("forgot-password-button");
    if (forgotPasswordBtn) {
        forgotPasswordBtn.addEventListener("click", resetPassword);
    }
});


// ============================
// üåç Fonctions globales accessibles dans le HTML
// ============================
window.toggleLoginForm = toggleLoginForm;
window.switchToCreateAccount = switchToCreateAccount;
window.togglePasswordVisibility = togglePasswordVisibility;
window.switchToLogin = switchToLogin;
window.resetPassword = resetPassword;

